// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Implements a Genkit flow to suggest potential diagnoses based on entered symptoms.
 *
 * - suggestDiagnoses - A function that suggests diagnoses based on symptoms.
 * - SuggestDiagnosesInput - The input type for the suggestDiagnoses function.
 * - SuggestDiagnosesOutput - The return type for the suggestDiagnoses function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestDiagnosesInputSchema = z.object({
  symptoms: z
    .string()
    .describe('A comma-separated list of symptoms entered by the doctor.'),
});
export type SuggestDiagnosesInput = z.infer<typeof SuggestDiagnosesInputSchema>;

const SuggestDiagnosesOutputSchema = z.object({
  diagnoses: z
    .string()
    .describe(
      'A list of potential diagnoses based on the provided symptoms.'
    ),
});
export type SuggestDiagnosesOutput = z.infer<typeof SuggestDiagnosesOutputSchema>;

export async function suggestDiagnoses(input: SuggestDiagnosesInput): Promise<SuggestDiagnosesOutput> {
  return suggestDiagnosesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestDiagnosesPrompt',
  input: {schema: SuggestDiagnosesInputSchema},
  output: {schema: SuggestDiagnosesOutputSchema},
  prompt: `You are an AI assistant that helps doctors by suggesting potential diagnoses based on the symptoms entered.

Please provide a list of potential diagnoses based on the following symptoms:

Symptoms: {{{symptoms}}}

Diagnoses:`,
});

const suggestDiagnosesFlow = ai.defineFlow(
  {
    name: 'suggestDiagnosesFlow',
    inputSchema: SuggestDiagnosesInputSchema,
    outputSchema: SuggestDiagnosesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
